package cmd

import (
	"fmt"
	"log"
	"net/http"
	"net/url"
	"os"
	"path/filepath"

	"github.com/FusionAuth/go-client/pkg/fusionauth"
	"github.com/spf13/cobra"
	"github.com/viostream/fusion-theme-sync/theme"
)

// getCmd represents the get command
var getCmd = &cobra.Command{
	Use:   "get",
	Short: "Gets a theme from FusionAuth and writes it to disk.",
	Long:  ``,
	Run: func(cmd *cobra.Command, args []string) {
		ensureAPIKeyPresent()
		fmt.Println("Running fusion-theme-sync get")

		url, _ := url.Parse(fusionURL)
		c := fusionauth.NewClient(&http.Client{}, url, apiKey)

		fmt.Printf("Retrieving theme from FusionAuth at %v...\n", fusionURL)

		resp, ferr, err := c.RetrieveTheme(themeID)
		if err != nil {
			log.Fatal(err)
		}

		if ferr != nil {
			log.Fatal("Got some error from FusionAuth but the SDK isn't great so not sure what - maybe check your API key")
		}

		// strip susbsitution keys
		var substitutions map[string]string
		if substitutionFile != "" {
			substitutions, err = theme.LoadSubstitutionsFromDisk(substitutionFile)
			if err != nil {
				log.Fatal(err)
			}
		}

		err = theme.WriteToDisk(&resp.Theme, directory, substitutions)
		if err != nil {
			log.Fatal(err)
		}

		// Write out a message containing the version in the directory for posterity.
		vresp, ferr, err := c.RetrieveVersion()
		if err != nil {
			log.Fatal(err)
		}

		if ferr != nil {
			log.Fatal("Got some error from FusionAuth but the SDK isn't great so not sure what - maybe check your API key")
		}

		f, err := os.Create(filepath.Join(directory, "_VERSION.txt"))
		if err != nil {
			log.Fatal(err)
		}
		defer f.Close()

		f.WriteString(fmt.Sprintf(`# Automatically generated by fusion-theme-sync version %v
# FusionAuth version %v
`, Version, vresp.Version))

		fmt.Printf("Successfully wrote your theme to %v. Have a nice day!\n", directory)
	},
}

func init() {
	rootCmd.AddCommand(getCmd)
}
